import java.util.Arrays;
 
class Book {
    private final String author;
    private final String title;
    private final int publishYear;
 
    Book() {
        this("Ден Браун", "Точка обману", 2001);
    }
 
    Book(String bookName, String bookAuthor, int year) {
        author = bookAuthor;
        title = bookName;
        publishYear = year;
    }
 
    @Override
    public String toString() {
        return "Book [author=" + author + ", publishYear=" + publishYear + ", title=" + title + "]";
    }
 
    
}
 
// КЛАС LibraryManager
public class LibraryManager {
    private Book[] books;
 
    public LibraryManager(int size) {
        books = new Book[size];
    }
 
    public static void main(String[] args) {
        LibraryManager lb = new LibraryManager(10);
        lb.testLibrary();
    }
 
    boolean addBook(Book book) {
        for (int i = 0; i < books.length; i++) {
            if (books[i] == null) {
                books[i] = book;
                return true;
            }
        }
        return false;
    }
 
    boolean deleteBook(int index) {
        boolean result = books[index] != null;
        books[index] = null;
        return result;
 
    }
 
    Book getBook(int index) {
        return books[index];
    }
  
    void testLibrary() {
        Book b1=new Book("Name1", "Author1", 1901);
        Book b2=new Book("Name2", "Author2", 1902);
        Book b3=new Book("Name3", "Author3", 1903);
        Book b4=new Book("Name4", "Author4", 1904);
        addBook(b1);
        addBook(b2);
        addBook(b3);
        addBook(b4);
        
        System.out.println("after adding");
        System.out.println(this);
        deleteBook(1);
        deleteBook(4);
        
        System.out.println("after removing");
        System.out.println(this);
 
    }
 
    @Override
    public String toString() {
        return "LibraryManager [books=" + Arrays.toString(books) + "]";
    }
}

Клас Main.java

public class Main {

    private static String XML_FILE = "G:\\навчання\\5 курс\\Інженерія даних та знань\\lab3\\lab3\\xmlFile.xml";

    public static void main(String[] args) throws Exception {
   List<Members> memberss = readFromXml();
   Collections.sort(memberss);
   memberss.forEach(members -> Collections.sort(members.getMembers()));
   memberss.forEach(members -> System.out.println(members.toString()));
    }

    private static List<Members> readFromXml() throws Exception {
        List<Members> elementList = new ArrayList<>();

        File fXmlFile = new File(XML_FILE);
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
        Document doc = dBuilder.parse(fXmlFile);
        doc.getDocumentElement().normalize();

        Element node = doc.getDocumentElement();
        NodeList nList = node.getElementsByTagName("Members");
        for (int i = 0; i < nList.getLength(); i++) {
            Members members = fromNode(nList.item(i));
            if (members != null) {
                elementList.add(members);
            }
        }

        return elementList;
    }

    private static Members fromNode(Node node) {
        if (node.getNodeType() != Node.ELEMENT_NODE) {
            return null;
        }
        Element element = (Element) node;
        Members members = new Members();
        members.setId(Integer.parseInt(element.getAttribute("id")));
        members.setName(element.getAttribute("name"));
        members.setType(Type.fromId(Integer.parseInt(((Element) node).getAttribute("type"))));

        NodeList membersNodes =  element.getElementsByTagName("Library");
        for (int i = 0; i < membersNodes.getLength(); i++) {
            Library Library = getLibraryFromNode(membersNodes.item(i));
            if (Library != null) {
                members.addMember(Library);
                Library.setMembers(members);
            }
        }
        return members;
    }

    private static Library getLibraryFromNode(Node node) {
        if (node.getNodeType() != Node.ELEMENT_NODE) {
            return null;
        }
        Element element = (Element) node;
        Library Library = new Library();
        Library.setName(element.getAttribute("name"));
        Library.setAdress(element.getAttribute("adress"));
        Library.setType(Type.fromId(Integer.parseInt(element.getAttribute("type"))));
        Library.setResult(Integer.parseInt(element.getAttribute("result")));
        Library.setFinePoints(Integer.parseInt(element.getAttribute("fine")));
        return Library;
    }

}
